#
# linkdata.prf
#
# Johan Lindh <johan@linkdata.se> is the maintainer of this
# file and all the files in this directory and subdirectories.
# Do not commit here unless you have explicit approval to do so.
#
# If you find a bug or need a feature or change, submit an issue at
# http://code.google.com/p/lcdhost/issues/list
#

# LH_DESTDIR must point to the root destination directory.
# This is usually set in ../lcdhost.prf
isEmpty(LH_DESTDIR): error("LH_DESTDIR is not set")

# Set default destinations paths based on platform
# and define LCDHOST_PLATFORM based on OS and release mode.
CONFIG(debug, debug|release): LCDHOST_PLATFORM = "d"
else: LCDHOST_PLATFORM = ""
win32 {
    LCDHOST_BINARIES = $$LH_DESTDIR
    LCDHOST_PLUGINS = $$LH_DESTDIR/plugins
    LCDHOST_PLATFORM=win32$$LCDHOST_PLATFORM
}
macx {
    LCDHOST_BINARIES = $$LH_DESTDIR/LCDHost.app/Contents/MacOS
    LCDHOST_PLUGINS = $$LH_DESTDIR/LCDHost.app/Contents/PlugIns
    LCDHOST_PLATFORM=mac64$$LCDHOST_PLATFORM
}
unix:!macx {
    LCDHOST_BINARIES = $$LH_DESTDIR
    LCDHOST_PLUGINS = $$LH_DESTDIR/plugins
    LCDHOST_PLATFORM=lin64$$LCDHOST_PLATFORM
}
DEFINES += LCDHOST_PLATFORM=\"\\\"$$LCDHOST_PLATFORM\\\"\"

# See if we have a reasonable default for DESTDIR based on TEMPLATE and CONFIG
# If nothing else fit, just dump it in LH_DESTDIR.
# In particular, the linkdata/ static libraries must end up there.
isEmpty(DESTDIR): contains(TEMPLATE,lib): !staticlib: DESTDIR = $$LCDHOST_PLUGINS
isEmpty(DESTDIR): contains(TEMPLATE,app): DESTDIR = $$LCDHOST_BINARIES
isEmpty(DESTDIR): DESTDIR = $$LH_DESTDIR

# Pull revision data from mercurial and put it in the
# CHANGESET and REVISION defines.
CHANGESET_REVISION = $$system($$quote(cd $$_PRO_FILE_PWD_ && hg log -l 1 --template \'{node}/{rev}\' .))
!isEmpty(CHANGESET_REVISION) {
    CHANGESET = $$section(CHANGESET_REVISION,"/",0,0)
    REVISION = $$section(CHANGESET_REVISION,"/",1,1)
    isEmpty( REVISION ): REVISION = 0
    DEFINES += CHANGESET=\"\\\"$$CHANGESET\\\"\"
    DEFINES += REVISION=$$REVISION
} else {
    warning("Can't get mercurial revison for" $$_PRO_FILE_PWD_)
}

# Add linkdata/ to the include path, and
# LH_DESTDIR to the static library search path.
INCLUDEPATH += $$PWD
LIBS += -L$$LH_DESTDIR

# API 5 compatibility CONFIG's
lh_api5_plugin {
    lh_api6: error($$_PRO_FILE_ ": Can't have both lh_api6 and lh_api5_plugin: INCLUDEPATH's will conflict")
    CONFIG += lh_api5
    hid: CONFIG += lh_hidapi
    hidapi: CONFIG += lh_hidapi
    usb: CONFIG += lh_libusb
    libusb: CONFIG += lh_libusb
    INCLUDEPATH += $$PWD/../plugins
    INCLUDEPATH += $$PWD/lh_api5
    INCLUDEPATH += $$PWD/lh_api5/QtSupport
}

# API 5
lh_api5 {
    LIBS += -llh_api5
    unix: POST_TARGETDEPS += $$LH_DESTDIR/liblh_api5.a
    PRECOMPILED_HEADER = $$PWD/lh_api5/lh_api5.h
}

# API 6
lh_api6 {
    LIBS += -llh_api6
    unix: POST_TARGETDEPS += $$LH_DESTDIR/liblh_api6.a
    PRECOMPILED_HEADER = $$PWD/lh_api6/lh_api6.h
}

# LCDHost supplied hidapi library
lh_hidapi {
    LIBS += -llh_hidapi
    unix: POST_TARGETDEPS += $$LH_DESTDIR/liblh_hidapi.a
    win32: LIBS += -lsetupapi
    macx: LIBS += -framework CoreFoundation -framework IOKit
    unix:!macx: LIBS += -ludev
}

# LCDHost supplied libusb library
lh_libusb {
    LIBS += -llh_libusb
    unix: POST_TARGETDEPS += $$LH_DESTDIR/liblh_libusb.a
    win32: DEFINES += OS_WINDOWS
    win32: LIBS += -lole32 -lsetupapi -lcfgmgr32
    macx: DEFINES += OS_DARWIN THREADS_POSIX HAVE_SYS_TIME_H HAVE_POLL_H
    macx: LIBS += -framework CoreFoundation -framework IOKit
    unix:!macx: DEFINES += OS_LINUX THREADS_POSIX HAVE_SYS_TIME_H HAVE_POLL_H
}

